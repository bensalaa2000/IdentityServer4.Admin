version: '3.4'
services:
# nginx-proxy:
#   image: jwilder/nginx-proxy
#   container_name: nginx
#   ports:
#     - '80:80'
#     - '443:443'
#   volumes:
#     - '/var/run/docker.sock:/tmp/docker.sock:ro'
#     - './shared/nginx/vhost.d:/etc/nginx/vhost.d'
#     - './shared/nginx/certs:/etc/nginx/certs:ro'
#   networks:
#     proxy: null
#     identityserverui:
#       aliases:
#         - sts.skoruba.local
#         - admin.skoruba.local
#         - admin-api.skoruba.local
#   restart: always
  skoruba-identityserver4-admin:
    image: '${DOCKER_REGISTRY-}skoruba-identityserver4-admin'
    build:
      context: .
      dockerfile: src/Skoruba.IdentityServer4.Admin/Dockerfile
    container_name: skoruba-identityserver4-admin
    environment:
      - VIRTUAL_HOST=admin-skoruba
      # - VIRTUAL_PORT=80
      - 'ConnectionStrings__ConfigurationDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__IdentityDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__AdminLogDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__AdminAuditLogDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'AdminConfiguration__IdentityAdminBaseUrl=https://admin-skoruba'
      - 'AdminConfiguration__IdentityAdminRedirectUri=https://admin-skoruba/signin-oidc'
      - 'AdminConfiguration__IdentityServerBaseUrl=https://sts-skoruba'
      - AdminConfiguration__RequireHttpsMetadata=false
      - 'IdentityServerData__Clients__0__ClientUri=https://admin-skoruba'
      - 'IdentityServerData__Clients__0__RedirectUris__0=https://admin-skoruba/signin-oidc'
      - 'IdentityServerData__Clients__0__FrontChannelLogoutUri=https://admin-skoruba/signin-oidc'
      - 'IdentityServerData__Clients__0__PostLogoutRedirectUris__0=https://admin-skoruba/signout-callback-oidc'
      - 'IdentityServerData__Clients__0__AllowedCorsOrigins__0=https://admin-skoruba'
      - 'IdentityServerData__Clients__1__RedirectUris__0=https://admin-api-skoruba/swagger/oauth2-redirect.html'
      # - 'Serilog__WriteTo__1__Args__connectionString=Server=db;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'Serilog__WriteTo__1__Args__connectionString=Server=postgres;Port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      # - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
    # ports:
    #   - 8080:80
    command: dotnet Skoruba.IdentityServer4.Admin.dll /seed
    depends_on:
      - postgres
      - skoruba-identityserver4-sts-identity
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/identitydata.json:/app/identitydata.json'
      - './shared/identityserverdata.json:/app/identityserverdata.json'
      # - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      - identityserverui
      - network_postgres
      - network_proxy
  skoruba-identityserver4-admin-api:
    image: '${DOCKER_REGISTRY-}skoruba-identityserver4-admin-api'
    build:
      context: .
      dockerfile: src/Skoruba.IdentityServer4.Admin.Api/Dockerfile
    container_name: skoruba-identityserver4-admin-api
    environment:
      - VIRTUAL_HOST=admin-api-skoruba
      # - VIRTUAL_PORT=80
      - AdminApiConfiguration__RequireHttpsMetadata=false
      - 'AdminApiConfiguration__ApiBaseUrl=https://admin-api.'
      - 'AdminApiConfiguration__IdentityServerBaseUrl=https://sts-skoruba'
      - 'ConnectionStrings__ConfigurationDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__IdentityDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__AdminLogDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__AdminAuditLogDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      # - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
    # ports:
    #   - 8080:80
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      # - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      - identityserverui
      - network_postgres
      - network_proxy
  skoruba-identityserver4-sts-identity:
    image: '${DOCKER_REGISTRY-}skoruba-identityserver4-sts-identity'
    build:
      context: .
      dockerfile: src/Skoruba.IdentityServer4.STS.Identity/Dockerfile
    container_name: skoruba-identityserver4-sts-identity
    environment:
      - VIRTUAL_HOST=sts-skoruba
      # - VIRTUAL_PORT=80
      - 'ConnectionStrings__ConfigurationDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__IdentityDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=postgres;port=5432;Database=IdentityServer4Admin;Username=admin;Password=Medtr@26'
      - 'AdminConfiguration__IdentityAdminBaseUrl=https://admin-skoruba'
      - 'IdentityServerOptions__IssuerUri=https://sts-skoruba'
      - IdentityServerOptions__Events__RaiseErrorEvents=true
      - IdentityServerOptions__Events__RaiseInformationEvents=true
      - IdentityServerOptions__Events__RaiseFailureEvents=true
      - IdentityServerOptions__Events__RaiseSuccessEvents=true
      # - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
    # ports:
    #   - 8080:80
    depends_on:
      - postgres
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      # - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      - identityserverui
          # aliases:
          #   - sts-skoruba
      - network_postgres
      - network_proxy
   # db:
  #   image: 'mcr.microsoft.com/mssql/server:2017-CU20-ubuntu-16.04'
  #   ports:
  #     - '7900:1433'
  #   container_name: skoruba-identityserver4-db
  #   environment:
  #     SA_PASSWORD: '${DB_PASSWORD:-Password_123}'
  #     ACCEPT_EULA: 'Y'
  #   volumes:
  #     - 'dbdata:/var/opt/mssql'
  #   networks:
  #     identityserverui: null
# volumes:
  # dbdata:
  #   driver: local
networks:
  # proxy:
  #   driver: bridge
  network_proxy:
    external: true
    name: reverse_proxy
  network_postgres:
    name: postgres
    external: true
  identityserverui:
    driver: bridge
